{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#salesforce-inspector-advanced","title":"Salesforce inspector advanced","text":"<p>Chrome and Firefox extension to add a metadata layout on top of the standard Salesforce UI to improve the productivity and joy of Salesforce configuration, development, and integration work.</p> <p>We all know and love Salesforce Inspector: As the great S\u00f8ren Krabbe did not have the time to maintain it anymore. Thomas Prouvot decided to take over and fork the original project but I do not share the same vision of him.</p> <p>My goal are :</p> <ul> <li>to have fun \ud83d\ude09 because open source is fun \ud83c\udf89!</li> <li>to achieve functionnal goals:</li> <li>kill dev console needs with SOSL, apex runner, debugger, profiler, static ressource support</li> <li>streaming API monitoring</li> <li>better suggestions in data export, import and inspect</li> <li>switch to a real editor instead of textarea : (color text, suggestion over text,...)</li> <li>flow improvment: cleanup old flow versions, debug custom lwc reactive, better naviguation, detect DML before callout in transaction, detect DML, SOQL in loop,... </li> <li>monitor external package version are up to date</li> <li>to achieve some technical goals:</li> <li>Avoid dom and have only react components</li> <li>switch to up to date version of dependencies</li> <li>have CI/CD build with unit test/integration test in build</li> <li>switch to typescript</li> </ul> <p>So I decided to fork on a new project in a more collaborative way.</p> <p>The goal of this project is to focus on improving key features for administrator: export, import and inspect. Then add new features to make life easier and avoid API call. In order to rich this goal, I have take a closer look to the full backlog of original project and from collegues, friends who work on salesforce but I need feedback from community.</p> <ul> <li>Salesforce inspector advanced</li> <li>Roadmap</li> <li>Documentation</li> <li>New features compared to SF Inspector Reloaded</li> <li>Security and Privacy</li> <li>Use Salesforce Inspector with a Connected App</li> <li>Installation<ul> <li>Browser Stores</li> <li>Local Installation</li> </ul> </li> <li>Troubleshooting</li> <li>Contributions</li> <li>Development<ul> <li>Chrome</li> <li>Firefox</li> <li>Unit tests</li> <li>Linting</li> </ul> </li> <li>Design Principles</li> <li>About</li> <li>License</li> </ul>"},{"location":"#roadmap","title":"Roadmap","text":"<p>[!IMPORTANT] Roadmap is here : https://github.com/dufoli/Salesforce-Inspector-Advanced/issues/5</p>"},{"location":"#documentation","title":"Documentation","text":"<p>[!NOTE] User guide for using the extension.</p> <p></p>"},{"location":"#new-features-compared-to-sf-inspector-reloaded","title":"New features compared to SF Inspector Reloaded","text":"<ul> <li>Export SOQL: suggest in subquery, field valud with IN/LIKE, format query, respect order of column, Download CSV file</li> <li>Export SOSL</li> <li>Inspect: suggest value for picklist</li> <li>Import: assignment rules</li> <li>Apex Runner: execute batch, enqueue job or just anonymous code, poll log, auto suggest className, </li> <li>Log: profiler, search with autoscroll, download</li> <li>Streaming : Manage and monitor plateform event</li> </ul>"},{"location":"#security-and-privacy","title":"Security and Privacy","text":"<p>The Salesforce Inspector browser extension/plugin communicates directly between the user's web browser and the Salesforce servers. No data is sent to other parties and no data is persisted outside of Salesforce servers after the user leaves the Salesforce Inspector pages. The Inspector communicates via the official Salesforce webservice APIs on behalf of the currently logged in user. This means the Inspector will be capable of accessing nothing but the data and features the user has been granted access to in Salesforce.</p> <p>All Salesforce API calls from the Inspector re-uses the access token/session used by the browser to access Salesforce. To acquire this access token the Salesforce Inspector requires permission to read browser cookie information for Salesforce domains.</p> <p>To validate the accuracy of this description, inspect the source code, monitor the network traffic in your browser or take my word.</p>"},{"location":"#use-salesforce-inspector-with-a-connected-app","title":"Use Salesforce Inspector with a Connected App","text":"<p>Follow steps described in how-to documentation. Note: you must complete these steps to use the extension in orgs where \"API Access Control\" is enabled.</p>"},{"location":"#installation","title":"Installation","text":""},{"location":"#browser-stores","title":"Browser Stores","text":"<ul> <li>Chrome Web Store</li> <li>Firefox Browser Add-ons</li> <li>Edge Add-ons : used chrome extension from edge store</li> </ul>"},{"location":"#local-installation","title":"Local Installation","text":"<ol> <li>Download or clone the repo.</li> <li>Checkout the master branch.</li> <li>Open <code>chrome://extensions/</code>.</li> <li>Enable <code>Developer mode</code>.</li> <li>Click <code>Load unpacked</code>.</li> <li>Select the <code>addon</code> subdirectory of this repository.</li> </ol>"},{"location":"#troubleshooting","title":"Troubleshooting","text":"<ul> <li>If Salesforce Inspector is not available after installation, the most likely issue is that your browser is not up to date. See instructions for Google Chrome.</li> <li>When you enable the My Domain feature in Salesforce, Salesforce Inspector may not work until you have restarted your browser (or until you have deleted the \"sid\" cookie for the old Salesforce domain by other means).</li> </ul>"},{"location":"#contributions","title":"Contributions","text":"<p>Contributions are welcome!</p> <p>To submit a PR, please create a branch from master branch. This branch will be taged when the new version is published on web store.</p> <p>Make sure to update CHANGES.md file by describing the improvement / bugfix you realised.</p> <p>In order to make sure everyone who reads documentation is aware of your improvement, you can update the 'how-to' page to document / expose this new functionality.</p> <p>Linting : to assure indentation, formatting and best practices coherence, please install ESLint extension.</p>"},{"location":"#development","title":"Development","text":"<ol> <li>Install Node.js with npm</li> <li><code>npm install</code></li> </ol>"},{"location":"#chrome","title":"Chrome","text":"<ol> <li><code>npm run chrome-dev-build</code></li> <li>Open <code>chrome://extensions/</code>.</li> <li>Enable <code>Developer mode</code>.</li> <li>Click <code>Load unpacked</code>.</li> <li>Select the <code>addon</code> subdirectory of this repository.</li> </ol>"},{"location":"#firefox","title":"Firefox","text":"<ol> <li><code>npm run firefox-dev-build</code></li> <li>In Firefox, open <code>about:debugging</code>.</li> <li>Click <code>Load Temporary Add-on\u2026</code>.</li> <li>Select the file <code>addon/manifest.json</code>.</li> </ol>"},{"location":"#unit-tests","title":"Unit tests","text":"<ol> <li>Set up an org (e.g. a Developer Edition) and apply the following customizations:</li> <li>Everything described in metadata in <code>test/</code>. Push to org with <code>sf deploy metadata -d test/ -o [your-test-org-alias]</code> or legacy <code>sfdx force:source:deploy -p test/ -u [your-test-org-alias]</code>.</li> <li>Make sure your user language is set to English.</li> <li>Ensure Allow users to relate a contact to multiple accounts is enabled (Setup \u2192 Account Settings).</li> <li>Ensure the org has no namespace prefix (Setup \u2192 Package Manager).</li> <li>Assign Permission Set <code>SfInspector</code> to your user.</li> <li>Navigate to one of the extension pages and replace the file name with <code>test-framework.html</code>, for example <code>chrome-extension://example/test-framework.html?host=example.my.salesforce.com</code>.</li> <li>Wait until \"Salesforce Inspector unit test finished successfully\" is shown.</li> <li>If the test fails, open your browser's developer tools console to see error messages.</li> </ol>"},{"location":"#linting","title":"Linting","text":"<ol> <li><code>npm run eslint</code></li> </ol>"},{"location":"#design-principles","title":"Design Principles","text":"<p>(we don't live up to all of them. pull requests welcome)</p> <ul> <li>Stay completely inactive until the user explicitly interacts with it. The tool has the potential to break Salesforce functionality when used, since we rely on monkey patching and internal APIs. We must ensure that you cannot break Salesforce just by having the tool installed or enabled. For example, we won't fix the setup search placeholder bug.</li> <li>For manual ad-hoc tasks only. The tool is designed to help administrators and developers interact with Salesforce in the browser. It is after all a browser add-on. Enabling automation is a non-goal.</li> <li>User experience is important. Features should be intuitive and discoverable, but efficiency is more important than discoverability. More advanced features should be hidden, and primary features should be central. Performance is key.</li> <li>Automatically provide as much contextual information as possible, without overwhelming the user. Information that is presented automatically when needed is a lot more useful than information you need to explicitly request. For example, provide autocomplete for every input.</li> <li>Provide easy access to the raw Salesforce API. Enhance the interaction in a way that does not break the core use case, if our enhancements fails. For example, ensure we can display the result of a data export even if we cannot parse the SOQL query.</li> <li>It is fine to implement features that are already available in the core Salesforce UI, if we can make it easier, smarter or faster.</li> <li>Ensure that it works for as many users as possible. (for system administrators, for standard users, with person accounts, with multi currency, with large data volumes, with professional edition, on a slow network etc.)</li> <li>Be conservative about the number and complexity of Salesforce API requests we make, but don't sacrifice the other principles to do so.</li> <li>Focus on system administrators, developers and integrators.</li> </ul>"},{"location":"#about","title":"About","text":"<p>By Olivier Dufour forked from Thomas Prouvot who forked from S\u00f8ren Krabbe and Jesper Kristensen</p> <sub>Olivier Dufour</sub> <sub>Guillaume Dufour</sub>"},{"location":"#license","title":"License","text":"<p>MIT</p>"},{"location":"how-to/","title":"How to","text":""},{"location":"how-to/#apex-runner","title":"Apex Runner","text":"<p>In order to run anonymous apex code, you can use apex runner. It is usefull to launched a batchable or a queuable. The log result will be poll during 15 min and can be resumed if needed.</p> <p></p> <p>Then you can check result on log and go to log analyzer to analyze it.</p> <p></p>"},{"location":"how-to/#log-analyzer","title":"log analyzer","text":"<p>The analyzer have 2 tabs.  The first tab display the raw log and permit to search keyword in it.</p> <p></p> <p>The second tab is a profilter and display a treeview to be able to analyze in detail It permit to troubleshoot any issue when you reach an org limit as DML, SOQL, callout, CPU time.  </p> <p>and for cpu limit exception (duration over 10 seconds), you can check flame chart. </p>"},{"location":"how-to/#sosl","title":"SOSL","text":"<p>In data Export, you run an SOSL query in order to retreive some data across multiple objects: </p>"},{"location":"how-to/#assignment-rules","title":"Assignment rules","text":"<p>In data import, you can choose to use assigment rules or not for lead, case and even Account (territory management).</p>"},{"location":"how-to/#soql-editor-and-data-export","title":"SOQL editor and data export","text":"<p>The SOQL editor support color, suggestion over text, and we have fixed a lot of issue in suggestion of original Salesforce inspector (subquery object name, subquery field suggestion, in list suggestion, __r suggest all custom relation, ...)</p> <p>Technical column (done, count, object type) can be skipped with an option.</p> <p>Date format and date time format is now customizable in option. So data can fit directly to your need. By the way, Data import date format can be customized too.</p>"},{"location":"how-to/#data-export-inline-edit-and-picklist","title":"Data export inline edit and picklist","text":"<p>On Data export, you can dit directly a field by double clicking on cell. Id must be present on SOQL and only field of main object is editable. For picklist, a list of picklist value is displayed with auto suggestion.</p>"},{"location":"how-to/#use-sf-inspector-with-a-connected-app","title":"Use Sf Inspector with a connected app","text":"<p>If you enabled \"API client whitelisting\" (a.k.a \"API Access Control\") in your org, SF Inspector may not work anymore.</p> <p>To secure the extension usage, you can use a OAuth 2.0 flow to get an access token, linked to a connected app installed in your org.</p> <p>To install the default \"SF Inspector Advanced\" connected app, navigate to Setup | Connected Apps OAuth Usage, and click \"Install\" on the Salesforce Inspector Advanced app.</p> <p>Warning Don't forget to grant access to the users by selecting the related profile(s) or permission set(s).</p> <p>If you are a Firefox user, or if you want to have full control over the connected app settings, you can also use your own connected app by following these instructions:</p> <ol> <li>Create a connected app under Setup | App Manager &gt; New Connected App.</li> <li>Set callback url to <code>chrome-extension://chromeExtensionId/data-export.html</code> (replace <code>chromeExtensionId</code> by the actual ID of the extension in your web browser). Make sure the \"Manage user data via APIs (api)\" scope is selected. You can leave other settings to their default values.</li> </ol> <p>Warning Don't forget to replace \"chromeExtensionId\" with your current extension Id </p> <ol> <li>Get Consumer Key and save it in the Options page</li> </ol> <p></p> <ol> <li>Enter the consumer key</li> </ol> <p></p> <ol> <li>Refresh page and generate new token</li> </ol> <p></p>"},{"location":"how-to/#migrate-saved-queries-from-legacy-extension-to-salesforce-inspector-advanced","title":"Migrate saved queries from legacy extension to Salesforce Inspector Advanced","text":"<ol> <li>Open data export page on legacy extension    </li> <li>Get saved queries from <code>insextSavedQueryHistory</code> property    </li> <li>Open it in VS Code, you should have a JSON like this one:</li> </ol> <pre><code>[\n  { \"query\": \"select Id from Contact limit 10\", \"useToolingApi\": false },\n  { \"query\": \"select Id from Account limit 10\", \"useToolingApi\": false }\n]\n</code></pre> <p>From there you have two options</p> <p>Import the queries by adding a label for each one with the label in query property suffixed by \":\"    ie.</p> <pre><code>[\n  {\n    \"query\": \"Contacts:select Id from Contact limit 10\",\n    \"useToolingApi\": false\n  },\n  {\n    \"query\": \"Accounts:select Id from Account limit 10\",\n    \"useToolingApi\": false\n  }\n]\n</code></pre> <p>Re-import this json in the new extension (with the same key <code>insextSavedQueryHistory</code>)</p>"},{"location":"how-to/#define-a-csv-separator","title":"Define a CSV separator","text":"<p>Add a new property <code>csvSeparator</code> containing the needed separator for CSV files</p> <p></p>"},{"location":"how-to/#disable-query-input-autofocus","title":"Disable query input autofocus","text":"<p>From popup button, go to option menu, and slect user experience tab to switch off option <code>disable query input autoFocus</code></p> <p></p>"},{"location":"how-to/#add-custom-query-templates","title":"Add custom query templates","text":"<p>Enter value in \"Query Templates\" option with your custom queries separated by \"//\" character. Example:</p> <p><code>SELECT Id FROM// SELECT Id FROM WHERE//SELECT Id FROM WHERE IN//SELECT Id FROM WHERE LIKE//SELECT Id FROM ORDER BY//SELECT ID FROM MYTEST__c//SELECT ID WHERE</code></p> <p></p>"},{"location":"how-to/#open-links-in-a-new-tab","title":"Open links in a new tab","text":"<p>If you want to always open extension's links in a new tab, open option from popup menu then in user experience tab, you can switch on the <code>Always open links in a new tab\"</code></p> <p></p> <p>If you want to open popup keyboard shortcuts, you can use the 'ctrl' (windows) or 'command' (mac) key with the corresponding key. Example:</p> <ul> <li>Data Export : e</li> <li>Data Import : i</li> <li>Org Limits : l</li> <li>Download Metadata : d</li> <li>Explore API : x</li> </ul>"},{"location":"how-to/#disable-metadata-search-from-shortcut-tab","title":"Disable metadata search from Shortcut tab","text":"<p>By default when you enter keyword in the Shortcut tab, the search is performed on the Setup link shortcuts AND metadata (Flows, PermissionSets and Profiles). If you want to disable the search on the metadata, you can go to options then on user experience tab, switch off <code>Search metadata from Shortcut tab</code> </p> <p></p>"},{"location":"how-to/#enable-disable-flow-scrollability","title":"Enable / Disable Flow scrollability","text":"<p>Go on a Salesforce flow and check / uncheck the checbox to update navigation scrollability on the Flow Builder on the header bar. You can modify it too inside option on user experience tab by switching <code>Flow Scrollability</code>.</p> <p></p>"},{"location":"how-to/#clear-old-flow-versions","title":"Clear old Flow versions","text":"<p>Go on a Salesforce flow and click on the <code>Clear old flow versions</code> button to delete flow versions older than <code>Number of flow version to keep</code> option on the Flow Builder on the header bar. You can modify <code>Number of flow version to keep</code> option on user experience tab.</p> <p></p>"},{"location":"how-to/#add-custom-links-to-shortcut-tab","title":"Add custom links to \"Shortcut\" tab","text":"<p>Because one of the main use case for custom links is to refer to a record in your org, those links are stored under a property prefixed by the org host url. You can add or remove custom link under option Menu then User experience tab: </p> <p>Then copy the url and add <code>_orgLinks</code> for the property name. Now you can enter the custom links following this convention:</p> <p>ET VOILA !</p> <p></p>"},{"location":"how-to/#enable-summary-view-of-permissionset-permissionsetgroups-from-shortcut-tab","title":"Enable summary view of PermissionSet / PermissionSetGroups from shortcut tab","text":"<p>Since Winter 24, there is a beta functionality to view a summary of the PermissionSet / PermissionSetGroups</p> <p>You can enable this view for the Shortcut search by going to options, on user experience tab then switching on the option <code>Open Permission Set / Permission Set Group summary from shortcuts</code> </p> <p>Then when you click on a PermissionSet / PermissionSetGroups search result, you'll be redirected to the summary.</p>"},{"location":"how-to/#customize-create-update-rest-callout-headers-to-prevent-execution-of-auto-assignment-rules-for-accounts-cases-or-leads","title":"Customize Create / Update rest callout headers (to prevent execution of auto assignment rules for Accounts, Cases, or Leads)","text":"<p>Assignment Rule Header</p> <p>From the popup, click on \"Options\" button and select the API tab.</p> <p></p> <p>If you want to prevent auto assignment rules, set the <code>createUpdateRestCalloutHeaders</code> property to <code>{\"Sforce-Auto-Assign\" : false}</code></p>"},{"location":"how-to/#update-api-version","title":"Update API Version","text":"<p>Since the plugin's api version is only updated when all productions have been updated to the new release, you may want to use the latest version during preview windows.</p> <p>[!IMPORTANT] When you manually update the API version, it won't be overriden by extension future updates.</p> <p></p>"},{"location":"how-to/#download-event-log-files","title":"Download Event Log Files","text":"<p>To make your life easier and avoid third party tools or login to ELF website, we implemented the download option from the data export page. When quering EventLogFile, add the \"LogFile\" field in the query and click on the value to download corresponding log.</p> <p></p>"},{"location":"how-to/#enable-debug-logs","title":"Enable debug logs","text":"<p>Sometimes you may want to enable logs for a particular user. From User tab, click the \"Enable Log\" button.</p> <p>By default, this will enable logs with level \"SFDC_DevConsole\" for 15 minutes.</p> <p></p> <p>You can update the debug level (configuration is per organization) and duration (for all organizations) on the Options page.</p> <p></p> <p>Warning Increasing the default duration may lead to a high volume of logs generated.</p>"},{"location":"how-to/#display-query-performance-in-data-export","title":"Display query performance in Data Export","text":"<p>To enable performance metrics for queries on the data export page, open the Options screen and select the Data Export tab, then set \"Display Query Execution Time\" to enabled. Total time for the query to process and, when applicable, batch stats (Total Number of Batches, Min/Max/Avg Batch Time) are displayed.</p>"},{"location":"how-to/#test-graphql-query","title":"Test GraphQL query","text":"<ul> <li>Open popup and click on \"Explore API\" button.</li> <li>Right click on the page and select \"Inspect\"</li> <li>Execute the code in dev console:</li> </ul> <p><code>var myQuery = { \"query\": \"query accounts { uiapi { query { Account { edges { node { Id  Name { value } } } } } } }\" };</code> <code>display(sfConn.rest(\"/services/data/v59.0/graphql\", {method: \"POST\", body: myQuery}));</code></p> <p></p>"},{"location":"how-to/#customize-extensions-favicon","title":"Customize extension's favicon","text":"<p>From the option page, you can customize the default favicon by:</p> <ul> <li>a predefined color among those values (green, orange, pink, purple, red, yellow)</li> <li>a custom favicon url (ie \"https://stackoverflow.com/favicon.ico\")</li> </ul> <p>The customization is linked to the org, it means you can have different colors for DEV and UAT env for example.</p> <p>You can choose to autogenerate color by environment. The same color will be used for Salesforce extension and Salesforce environment but salesforce inspector extension have a different icon. So you can find quickly the right envionment from tab.</p> <p></p>"},{"location":"release-note/","title":"Release Notes","text":""},{"location":"release-note/#version-1301","title":"Version 1.30.1","text":"<ul> <li>api explorer: mesure time, store small response in history, http header and body type support, add template : bulk api, chatter api, report api, platform event channel, platform event channel member. issue 194</li> <li>update to 62 api version</li> <li>enable on flow debug and experince builder</li> <li>fix log parsing infinite loop and more readable duration</li> <li>apex runner : fix bug with error remain sometimes and wrong log displayed</li> <li>fix auto suggest data export who delete some text issue 192</li> <li>fix a toggle menu null ref</li> <li>fix warning missing key on array</li> </ul>"},{"location":"release-note/#version-130","title":"Version 1.30","text":"<ul> <li>Share date format option for import and export issue 166</li> <li>Fix token generation issue and display message on popup if failed issue 165</li> <li>Save all button on data export issue 174</li> <li>Retry system for token before hard failing issue 172</li> <li>Fix edit and menu which disappear on scroll by keeping state of cells with scroll or loading data issue 178</li> <li>Get all tokens if other window refresh token issue 180 and issue 83</li> <li>Support Graphql in data export issue 109</li> <li>Ability to load a range of data as parameter of query issue 169</li> <li>button on flow to know where the flow is used (subflow, flexipage, quick action) issue 157</li> <li>Improved quote management close to editor by @Dufgui issue 61</li> <li>API explorer: add template, history and saved request and display format according data issue 171</li> <li>streaming: format json and filter result and download button issue 114</li> </ul>"},{"location":"release-note/#version-129","title":"Version 1.29","text":"<ul> <li>fix name in saved queries issue 159</li> <li>make shortcut editable issue 161</li> <li>fix inline edit on data export issue 158</li> <li>fix plateform event link on popup objects tab issue 155</li> <li>add gear link to option from each page issue 152</li> <li>export option : skip technical column and date format issue 151</li> <li>fix copy record id issue 143</li> </ul>"},{"location":"release-note/#version-128","title":"Version 1.28","text":"<ul> <li>Fields() do not handle metadata and address field issue 130</li> <li>Explore api: new ux  issue 84</li> <li>Flamgraph on other mesures (SOQL, Heap,...) issue 139</li> <li>Suggestion on data export edit issue 126</li> <li>Custom Favicon for Salesforce environment and extension issue 138</li> <li>Add roll up summary info issue 125</li> <li>Shortcut insid screen instead of popup issue 141</li> <li>Default action issue 140</li> <li>Import guess sobject based on id prefix if no type column issue 135</li> <li>Data export: select child object field remove parent (exemple: RecordType.Dev =&gt; DeveloperName = remove recordType)</li> <li>Data export : Fix __r must display all custom relationship</li> <li>Data export : field in subquery failed to suggest</li> <li>Data export, inspect: select value picklist value if already a value selected will failed to update and need to erase a letter to make it working</li> <li>Data export, apex runner: , column width grow exponentially during lateral scroll</li> </ul>"},{"location":"release-note/#version-127","title":"Version 1.27","text":"<p>[!IMPORTANT] New plateform event Manager A Streaming tool to manage plateform event, push topic, generic event, change data capture is available with new features: - Subscribe and monitor event - Register channel and plateform event - Publish an event with payload</p> <ul> <li>Icon menu in popup</li> <li>Plateform event Manager issue 15</li> <li>Show diff cells in blue when 2 rows displayed issue 48</li> <li>Review profiler to be more readable issue 105</li> <li>Profiler: add flame chart issue 115</li> <li>Display name, number, subject or title according to what is available issue 37</li> <li>Handle address field properly issue 108</li> </ul>"},{"location":"release-note/#version-126","title":"Version 1.26","text":"<p>[!IMPORTANT] A new editor (query and script) is available in apex runner and data export with new features: - Inplace suggestions (can be disable in option) - Modular syntax highlighting for APEX, SOQL, and SOSL - Automatic indent on new lines - Indent selected text or lines with tab key - Parentheses, curly brace, brackets, or quotes   - Wrap selected text   - Automatic close completion</p>"},{"location":"release-note/#editor","title":"Editor","text":"<ul> <li>Migrate apex runner to new editor issue 85</li> <li>Add option to show/hide proposal with ctrl+space shortcut issue 89</li> <li>Highlight keywords issue 62</li> <li>Move suggestion over text area with list as regular IDE do issue 41</li> <li>Improve quote in editor issue 73</li> <li>Missing close/open char (parenthesis, bracket, curly brace), corresponding open/close char must be in red. issue 90</li> </ul>"},{"location":"release-note/#popup","title":"Popup","text":"<ul> <li>Escape to close popup issue 71</li> <li>Resize popup window issue 77</li> </ul>"},{"location":"release-note/#option","title":"Option","text":"<ul> <li>Manage custom links in option issue 91</li> <li>Enhance option component (template, history, ...) issue 80</li> </ul>"},{"location":"release-note/#table","title":"Table","text":"<ul> <li>Migrate data-loader to new table react component issue 75</li> </ul>"},{"location":"release-note/#flow","title":"Flow","text":"<ul> <li>Access flow version details from flow builder issue 86</li> <li>Clear old flow versions inside FlowBuilder issue 50</li> </ul>"},{"location":"release-note/#log-and-profile","title":"Log and Profile","text":"<ul> <li>Upload a previous log file issue 103</li> </ul>"},{"location":"release-note/#other","title":"Other","text":"<ul> <li>Navigation bugs: custom settings and knowledge link issue 91</li> </ul>"},{"location":"release-note/#version-125","title":"Version 1.25","text":"<ul> <li>Metadata: download data model by @dufoli in issue 11</li> <li>Apex fields and methods suggestion by @dufoli in issue 45</li> <li>Log: improove ux and performance by @dufoli in issue 43</li> <li>data export: Inline edit by @dufoli in issue 47</li> <li>Metadata: UX multi column and search  by @dufoli in issue 55</li> <li>Close popup on inspect and data export by @dufoli in issue 42</li> <li>save query history with comments, fix horizontal scroll, make apex log more readable, fix stop polling and restart, typo by @dufoli in issue 63</li> <li>auto indent on new line by @dufoli in issue 58</li> <li>indent/unindent selection with tab/shift tab by @dufoli in issue 59</li> <li>Wrap selected text with paretheses, brackets or quotes by @dufoli in issue 60</li> <li>make popup button movable by @Dufgui in issue 24</li> <li>support new domain : salesforce-setup.com</li> </ul>"},{"location":"release-note/#version-124","title":"Version 1.24","text":"<ul> <li>Export: Support comments in SOQL / SOSL issue 22</li> <li>Export: format query SOQL/ SOSL issue 22</li> <li>Export: keep header on top of result on scrolling issue 20</li> <li>Export: Add download CSV issue 26</li> <li>Inspect: suggest value for picklist issue 28</li> <li>Import: assignment rule for Lead, Case and Account issue 23</li> <li>Popup: increase height of pannel and move it heigher</li> <li>Fix misc bugs (conecteed app,...)</li> <li>Log: Fix encoding for log dowload issue 33</li> </ul>"},{"location":"release-note/#version-123","title":"Version 1.23","text":"<ul> <li>Export SOQL: suggest field and related object link in subquery: SELECT Id, (SELECT Id from Contacts) FROM Account</li> <li>Export SOQL: suggest field value with IN, LIKE, excludes(), includes()</li> <li>Export SOQL: respect order of column</li> <li>Export SOQL: Remove total, done, index column for subquery result </li> <li>Export SOSL : execution</li> <li>Export SOSL : suggest keywords, field and object</li> <li>Apex Runner: execute batch, enqueue job or just anonymous code</li> <li>Apex Runner: poll log</li> <li>Apex Runner: auto suggest className</li> <li>Log: profiler</li> <li>Log: search with autoscroll</li> <li>Log: download</li> </ul>"},{"location":"troubleshooting/","title":"Troubleshooting","text":""},{"location":"troubleshooting/#common-issues-that-may-occurs","title":"Common issues that may occurs","text":""},{"location":"troubleshooting/#blank-popup","title":"Blank popup","text":"<p>You've just installed Salesforce Inspector Advanced and ... the popup is blank \ud83d\ude25 Make sure that third party cookies are enabled in your browser:</p> <p></p>"},{"location":"troubleshooting/#salesforce-inspector-advanced-is-not-working-anymore","title":"Salesforce Inspector Advanced is not working anymore","text":"<p>One of the cause can be a domain update (Hyperforce migration, MyDomain change ...). What you need to do is to delete the sid cookie (and website associated cookies if sid did not worked).</p> <p></p>"},{"location":"troubleshooting/#unauthorized-or-network-error","title":"Unauthorized or Network error","text":"<p>If your are getting an \"Unauthorized\" or \"Network error\" while online, it is likely caused by an authentication issue. To troubleshoot, clean Local Storage, and then try to reauthenticate in the extension, by clicking the \"Click here to generate new token\" button, or the \"Generate Access Token\" button.</p> <p>When redirected to the \"Data Export\" tab at the end of the OAuth flow, check the URL parameters in your address bar: if it contains <code>error=OAUTH_APP_BLOCKED&amp;error_description=this+app+is+blocked+by+admin</code> this means that your org has API Access Control enabled. In that situation, you must ask your Salesforce admin to install and allow the Salesforce Inspector Connected App before you can use it.</p> <p></p>"},{"location":"welcome/","title":"Welcome","text":"<p>Thank you for installing Salesforce Inspector Advanced, a Chrome extension that helps you inspect, analyze, and optimize your Salesforce data and metadata.</p> <p>With this extension, you can:</p> <ul> <li>View and edit field-level details, such as API name, type, label, and value, for any Salesforce record.</li> <li>Access setup shortcut, search for metadata from Shortcut tab.</li> <li>Export data to CSV, Excel or JSON format.</li> <li>Import data to create or update records in Salesforce.</li> <li>Run SOQL queries to query data and metadata from Salesforce.</li> <li>Generate REST API requests from Explore API.</li> </ul> <p>You can enable the extension by clicking on the Salesforce Inspector Advanced icon in the toolbar, or by pressing <code>Ctrl+Shift+I</code> (Windows) / <code>Ctrl+Option+I</code> (Mac) on your keyboard.</p> <p>For more information, please read this the documentation page.</p> <p>We hope you will enjoy using Salesforce Inspector Advanced and find it useful for your Salesforce development and administration tasks. If you have any feedback, questions, or issues, please feel free to open an issue on GitHub.</p> <p>Happy inspecting! \ud83d\ude0a</p>"},{"location":"welcome/#how-to-proceed-if-you-already-have-salesforce-inspector-legacy-version","title":"How to proceed if you already have 'Salesforce Inspector' legacy version?","text":"<p>First, thank you for migrating. I hope you will enjoy the new features and UI of this one!</p> <p>I suggest you disable the legacy version so that you'll be able to migrate your saved queries from the previous one. Once migrated you can uninstall the legacy version, you should not need it anymore.</p>"}]}